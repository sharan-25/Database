--change the container to work in the PDB that was created by default with the Oracle Express installation
ALTER SESSION SET CONTAINER = XEPDB1;

--create a user/schema to have your own ?personal space? in the XEPDB1 pluggable database
CREATE USER SCHOOL_KAUR_2211871 IDENTIFIED BY 123; 

--grant the permission to SCHOOL_KAUR_2211871 to connect and create objects (tables, etc.)
GRANT CONNECT, RESOURCE TO SCHOOL_KAUR_2211871;

--give the permission to SCHOOL_KAUR_2211871 to also write data in the tables
GRANT UNLIMITED TABLESPACE TO SCHOOL_KAUR_2211871;

--after that step, you can create a connection on the XEPDB1 database with the user SCHOOL_KAUR_2211871 and password 123, and start working in your own schema

ALTER SESSION SET CURRENT_SCHEMA=SCHOOL_KAUR_2211871;
--------------------------------------------------------
--  File created - Monday-December-11-2023   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_ROW" AS OBJECT 
( 
    -- 2023-11-07	HARSHARAN KAUR(2211871)	Created the type TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_ROW.
    
    REPORTID	VARCHAR2(32 BYTE),
    STUDENTID	VARCHAR2(32 BYTE),
    TEACHERID	VARCHAR2(32 BYTE),
    RESULT	NUMBER(5,2),
    COMMENTS	VARCHAR2(250 BYTE),
    CREATEDDATE	TIMESTAMP(6),
    LASTMODIFIEDDATE	TIMESTAMP(6),
    EXAM_DATE	DATE,
    TEACHERID_FK	VARCHAR2(32 BYTE),
    TEACHER_LAST_NAME	VARCHAR2(20 BYTE),
    TEACHER_FIRST_NAME	VARCHAR2(20 BYTE),
    TEACHER_EMAIL	VARCHAR2(20 BYTE),
    TEACHER_SALARY	NUMBER(4,2),
    TEACHER_SOCIAL_INSURANCE_NUMBER	VARCHAR2(9 BYTE),
    INSURANCE_RATE	NUMBER(5,2),
    STUDENT_ID_FK	VARCHAR2(32 BYTE),
    STUDENT_NUMBER	VARCHAR2(9 BYTE),
    STUDENT_LAST_NAME	VARCHAR2(30 BYTE),
    STUDENT_FIRST_NAME	VARCHAR2(30 BYTE),
    STUDENT_ADDRESS	VARCHAR2(50 BYTE),
    STUDENT_CITY	VARCHAR2(30 BYTE),
    STUDENT_POSTAL_CODE	VARCHAR2(10 BYTE),
    STUDNET_NUMBER_OF_EXAM_TRIES	NUMBER(38,0)
)

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_ROW" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_TABLE" 
AS TABLE OF TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_ROW;

-- 2023-11-07	HARSHARAN KAUR(2211871)	Created the type TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_ROW.



/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_TABLE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_STUDENT_BASED_ON_TEACHER_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_STUDENT_BASED_ON_TEACHER_ROW" AS OBJECT 
( 
 FIRSTNAME  VARCHAR2(25 BYTE),
 LASTNAME VARCHAR2(25 BYTE),
 STUDENTNUMBER VARCHAR2(12 BYTE)
)

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_STUDENT_BASED_ON_TEACHER_ROW" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_STUDENT_BASED_ON_TEACHER_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_STUDENT_BASED_ON_TEACHER_TABLE" 
AS TABLE OF TYPE_STUDENT_BASED_ON_TEACHER_ROW;

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_STUDENT_BASED_ON_TEACHER_TABLE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_STUDENT_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_STUDENT_ROW" AS OBJECT 
(  
    STUDENTID	VARCHAR2(32 BYTE),
    LASTNAME	VARCHAR2(25 BYTE),
    FIRSTNAME	VARCHAR2(25 BYTE),
    ADDRESS	VARCHAR2(50 BYTE),
    CITY	VARCHAR2(20 BYTE),
    POSTALCODE	VARCHAR2(10 BYTE),
    STUDENTNUMBER   VARCHAR2(12 BYTE),
    CREATEDDATE TIMESTAMP(6),
    LASTMODIFIEDDATE	TIMESTAMP(6),
    EXAM_TRIES INT,
    ALLERGIES VARCHAR2(20)
)

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_STUDENT_ROW" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_STUDENT_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_STUDENT_TABLE" 
AS TABLE OF TYPE_STUDENT_ROW;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED TYPE STUDENT TABLE.

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_STUDENT_TABLE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_TEACHER_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_TEACHER_ROW" AS OBJECT 
( 
TEACHERID	VARCHAR2(32 BYTE)
,LASTNAME	VARCHAR2(25 BYTE)
,FIRSTNAME	VARCHAR2(25 BYTE)
,EMAIL	VARCHAR2(20 BYTE)
,SALARY	NUMBER(4,2)
,CREATEDDATE	TIMESTAMP(6)
,LASTMODIFIEDDATE	TIMESTAMP(6)
,SOCIAL_INSURANCE_NUMBER VARCHAR2(9)
,INSURANCE_RATE DECIMAL(5,2)
)



/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_TEACHER_ROW" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_TEACHER_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_TEACHER_TABLE" 
AS TABLE OF TYPE_TEACHER_ROW;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED TYPE TEACHER TABLE.



/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_TEACHER_TABLE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEETS_JOIN_TEACHERS_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_TIMESHEETS_JOIN_TEACHERS_ROW" AS OBJECT 
( 
    -- 2023-11-07	HARSHARAN KAUR(2211871)	Created the type TYPE_TIMESHEETS_JOIN_TEACHERS_ROW.
    
    TIMESHEET_ID	VARCHAR2(32 BYTE),
    TEACHERID	VARCHAR2(32 BYTE),
    WEEK_START_DATE	DATE,
    HOURS_WORKED	NUMBER(3,1),
    CREATE_DATE_TIME	TIMESTAMP(6),
    LAST_MODIFY_DATE	TIMESTAMP(6),
    TEACHERID_FK	VARCHAR2(32 BYTE),
    LASTNAME	VARCHAR2(20 BYTE),
    FIRSTNAME	VARCHAR2(20 BYTE),
    EMAIL	VARCHAR2(20 BYTE),
    SALARY	NUMBER(4,2),
    SOCIAL_INSURANCE_NUMBER	VARCHAR2(9 BYTE),
    INSURANCE_RATE	NUMBER(5,2),
    PAYCHECK    NUMBER
)

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_TIMESHEETS_JOIN_TEACHERS_ROW" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEETS_JOIN_TEACHERS_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_TIMESHEETS_JOIN_TEACHERS_TABLE" 
AS TABLE OF TYPE_TIMESHEETS_JOIN_TEACHERS_ROW;
 -- 2023-11-07	HARSHARAN KAUR(2211871)	Created the type TYPE_TIMESHEETS_JOIN_TEACHERS_TABLE .



/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_TIMESHEETS_JOIN_TEACHERS_TABLE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_TIMESHEET_ROW" AS OBJECT 
( 
 --2023-11-06 HARSHARAN KAUR(2211871) CREATED TYPE_TIMESHEET_ROW
 TIMESHEET_ID	VARCHAR2(32 BYTE)
,TEACHERID	VARCHAR2(32 BYTE)
,WEEK_START_DATE	DATE
,HOURS_WORKED	NUMBER(3,1)
,CREATED_DATE_TIME	TIMESTAMP(6)
,LAST_MODIFIED_DATE	TIMESTAMP(6)
)



/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_TIMESHEET_ROW" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SCHOOL_KAUR_2211871"."TYPE_TIMESHEET_TABLE" AS TABLE OF TYPE_TIMESHEET_ROW; 
--2023-11-06 HARSHARAN KAUR(2211871) CREATED TYPE_TIMESHEET_TABLE



/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TYPE_TIMESHEET_TABLE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_COURSEID_PK
--------------------------------------------------------

   CREATE SEQUENCE  "SCHOOL_KAUR_2211871"."SEQUENCE_COURSEID_PK"  MINVALUE 1 MAXVALUE 100 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_STUDENT_NUMBER
--------------------------------------------------------

   CREATE SEQUENCE  "SCHOOL_KAUR_2211871"."SEQUENCE_STUDENT_NUMBER"  MINVALUE 871 MAXVALUE 2000 INCREMENT BY 5 START WITH 871 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table COURSES
--------------------------------------------------------

  CREATE TABLE "SCHOOL_KAUR_2211871"."COURSES" 
   (	"COURSEID" VARCHAR2(32 BYTE) DEFAULT NULL, 
	"COURSENAME" VARCHAR2(25 BYTE), 
	"COURSECODE" VARCHAR2(10 BYTE), 
	"COURSEDESCRIPTION" VARCHAR2(4000 BYTE), 
	"CREATEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"LASTMODIFIEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"   NO INMEMORY ;

   COMMENT ON TABLE "SCHOOL_KAUR_2211871"."COURSES"  IS '2023-10-30	Harsharan Kaur(2211871)	Created the COURSES table.
2023-10-30	Harsharan Kaur(2211871)	Added the column COURSEID.
2023-10-30	Harsharan Kaur(2211871)	Added the column COURSENAME.
2023-10-30	Harsharan Kaur(2211871)	Added the column COURSECODE.
2023-10-30	Harsharan Kaur(2211871)	Added the column COURSEDESCRIPTION.
2023-10-30	Harsharan Kaur(2211871)	Added the column CREATEDDATE.
2023-10-30	Harsharan Kaur(2211871)	Added the column LASTMODIFIEDDATE.
';
--------------------------------------------------------
--  DDL for Table MODIFICATIONS
--------------------------------------------------------

  CREATE TABLE "SCHOOL_KAUR_2211871"."MODIFICATIONS" 
   (	"MODIFICATION_ID" VARCHAR2(32 BYTE) DEFAULT SYS_GUID(), 
	"FIELD_NAME" VARCHAR2(30 BYTE), 
	"MODIFICATION_DATE_TIME" TIMESTAMP (6), 
	"OLD_VALUE" VARCHAR2(250 BYTE), 
	"NEW_VALUE" VARCHAR2(250 BYTE), 
	"CREATE_DATE_TIME" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"REPORTID" VARCHAR2(32 BYTE) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"   NO INMEMORY ;

   COMMENT ON TABLE "SCHOOL_KAUR_2211871"."MODIFICATIONS"  IS 'MODIFICATIONS
2023-11-08	Harsharan Kaur(2211871)	Added the column MODIFICATION_ID.
2023-11-08	Harsharan Kaur(2211871)	Added the column FIELD_NAME 
2023-11-08	Harsharan Kaur(2211871)	Added the column MODIFICATION_DATE_TIME.
2023-11-08	Harsharan Kaur(2211871)	Added the column OLD_VALUE.
2023-11-08	Harsharan Kaur(2211871)	Added the column NEW_VALUE.
2023-11-08	Harsharan Kaur(2211871)	Added the column CREATED_DATE_TIME.
2023-11-23	Harsharan Kaur(2211871)	Added the column REPORTID.



.

';
--------------------------------------------------------
--  DDL for Table REPORTS
--------------------------------------------------------

  CREATE TABLE "SCHOOL_KAUR_2211871"."REPORTS" 
   (	"REPORTID" VARCHAR2(32 BYTE) DEFAULT SYS_GUID(), 
	"STUDENTID" VARCHAR2(32 BYTE), 
	"TEACHERID" VARCHAR2(32 BYTE), 
	"RESULT" NUMBER(3,0), 
	"COMMENTS" VARCHAR2(250 BYTE), 
	"CREATEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"LASTMODIFIEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"EXAM_DATE" DATE, 
	"COURSEID" VARCHAR2(32 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"   NO INMEMORY ;

   COMMENT ON TABLE "SCHOOL_KAUR_2211871"."REPORTS"  IS 'REPORTS:
2023-10-30	Harsharan Kaur(2211871)	Created the REPORTS table.
2023-10-30	Harsharan Kaur(2211871)	Added the column REPORTID.
2023-10-30	Harsharan Kaur(2211871)	Added the column STUDENTID.
2023-10-30	Harsharan Kaur(2211871)	Added the column TEACHERID.
2023-10-30	Harsharan Kaur(2211871)	Added the column RESULT.
2023-10-30	Harsharan Kaur(2211871)	Added the column COMMENTS.
2023-10-30	Harsharan Kaur(2211871)	Added the column CREATEDDATE.
2023-10-30	Harsharan Kaur(2211871)	Added the column LASTMODIFIEDDATE.';
--------------------------------------------------------
--  DDL for Table STUDENTS
--------------------------------------------------------

  CREATE TABLE "SCHOOL_KAUR_2211871"."STUDENTS" 
   (	"STUDENTID" VARCHAR2(32 BYTE) DEFAULT SYS_GUID(), 
	"LASTNAME" VARCHAR2(25 BYTE), 
	"FIRSTNAME" VARCHAR2(25 BYTE), 
	"ADDRESS" VARCHAR2(50 BYTE), 
	"CITY" VARCHAR2(20 BYTE), 
	"POSTALCODE" VARCHAR2(10 BYTE), 
	"STUDENTNUMBER" VARCHAR2(12 BYTE), 
	"CREATEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"LASTMODIFIEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"EXAM_TRIES" NUMBER(*,0), 
	"ALLERGIES" VARCHAR2(20 BYTE) DEFAULT 'Student is healthy'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"   NO INMEMORY ;

   COMMENT ON TABLE "SCHOOL_KAUR_2211871"."STUDENTS"  IS 'STUDENTS:
2023-10-30	Harsharan Kaur(2211871)	Created the STUDENTS table.
2023-10-30	Harsharan Kaur(2211871)	Added the column STUDENTID.
2023-10-30	Harsharan Kaur(2211871)	Added the column LASTNAME.
2023-10-30	Harsharan Kaur(2211871)	Added the column FIRSTNAME.
2023-10-30	Harsharan Kaur(2211871)	Added the column ADDRESS.
2023-10-30	Harsharan Kaur(2211871)	Added the column CITY.
2023-10-30	Harsharan Kaur(2211871)	Added the column POSTALCODE.
2023-10-30	Harsharan Kaur(2211871)	Added the column CREATEDDATE.
2023-10-30	Harsharan Kaur(2211871)	Added the column LASTMODIFIEDDATE.
2023-11-08	Harsharan Kaur(2211871)	Added the column EXAM_TRIES.
2023-11-23	Harsharan Kaur(2211871)	Added the column ALLERGIES.
';
--------------------------------------------------------
--  DDL for Table TEACHERS
--------------------------------------------------------

  CREATE TABLE "SCHOOL_KAUR_2211871"."TEACHERS" 
   (	"TEACHERID" VARCHAR2(32 BYTE) DEFAULT SYS_GUID(), 
	"LASTNAME" VARCHAR2(25 BYTE), 
	"FIRSTNAME" VARCHAR2(25 BYTE), 
	"EMAIL" VARCHAR2(20 BYTE), 
	"SALARY" NUMBER(4,2), 
	"CREATEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"LASTMODIFIEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"SOCIAL_INSURANCE_NUMBER" VARCHAR2(9 BYTE), 
	"INSURANCE_RATE" NUMBER(5,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"   NO INMEMORY ;

   COMMENT ON TABLE "SCHOOL_KAUR_2211871"."TEACHERS"  IS 'TEACHERS:
2023-10-30	Harsharan Kaur(2211871)	Created the TEACHERS table.
2023-10-30	Harsharan Kaur(2211871)	Added the column TEACHERID.
2023-10-30	Harsharan Kaur(2211871)	Added the column LASTNAME.
2023-10-30	Harsharan Kaur(2211871)	Added the column FIRSTNAME.
2023-10-30	Harsharan Kaur(2211871)	Added the column EMAIL.
2023-10-30	Harsharan Kaur(2211871)	Added the column SALARY.
2023-10-30	Harsharan Kaur(2211871)	Added the column CREATEDDATE.
2023-10-30	Harsharan Kaur(2211871)	Added the column LASTMODIFIEDDATE.
';
--------------------------------------------------------
--  DDL for Table TIMESHEETS
--------------------------------------------------------

  CREATE TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" 
   (	"TIMESHEET_ID" VARCHAR2(32 BYTE) DEFAULT SYS_GUID(), 
	"TEACHERID" VARCHAR2(32 BYTE), 
	"WEEK_START_DATE" DATE, 
	"HOURS_WORKED" NUMBER(3,1), 
	"CREATED_DATE_TIME" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"LAST_MODIFIED_DATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"   NO INMEMORY ;

   COMMENT ON TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS"  IS 'TIMESHEETS:
2023-11-08	Harsharan Kaur(2211871)	Created the TIMESHEETS table.
2023-11-08	Harsharan Kaur(2211871)	Added the column TIMESHEET_ID.
2023-11-08	Harsharan Kaur(2211871)	Added the column TEACHER_ID.
2023-11-08	Harsharan Kaur(2211871)	Added the column WEEK_START_DATE.
2023-11-08	Harsharan Kaur(2211871)	Added the column HOURS_WORKED.
2023-11-08	Harsharan Kaur(2211871)	Added the column CREATEDDATE.
2023-11-08	Harsharan Kaur(2211871)	Added the column LASTMODIFIEDDATE.';
REM INSERTING into SCHOOL_KAUR_2211871.COURSES
SET DEFINE OFF;
Insert into SCHOOL_KAUR_2211871.COURSES (COURSEID,COURSENAME,COURSECODE,COURSEDESCRIPTION,CREATEDDATE,LASTMODIFIEDDATE) values ('4','MATHS','AB14','SEM4-COURSE',to_timestamp('23-11-23 5:39:10.075000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('23-11-23 5:39:10.075000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into SCHOOL_KAUR_2211871.COURSES (COURSEID,COURSENAME,COURSECODE,COURSEDESCRIPTION,CREATEDDATE,LASTMODIFIEDDATE) values ('DA02A192F3C84B73BD4169FAEC4A1098','OOP','AB23','SEM1-COURSE',to_timestamp('02-11-23 7:57:19.119000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('02-11-23 7:57:19.119000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into SCHOOL_KAUR_2211871.COURSES (COURSEID,COURSENAME,COURSECODE,COURSEDESCRIPTION,CREATEDDATE,LASTMODIFIEDDATE) values ('275AF885B6C34755A34BA710E96BC897','WEB DEVELOPMENT','AB13','SEM3-COURSE',to_timestamp('02-11-23 7:57:19.130000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('02-11-23 7:57:19.130000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into SCHOOL_KAUR_2211871.COURSES (COURSEID,COURSENAME,COURSECODE,COURSEDESCRIPTION,CREATEDDATE,LASTMODIFIEDDATE) values ('2','MicrosoftSQL','AB15','SEM5-COURSE',to_timestamp('23-11-23 4:56:50.976000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('23-11-23 4:56:50.976000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
REM INSERTING into SCHOOL_KAUR_2211871.MODIFICATIONS
SET DEFINE OFF;
Insert into SCHOOL_KAUR_2211871.MODIFICATIONS (MODIFICATION_ID,FIELD_NAME,MODIFICATION_DATE_TIME,OLD_VALUE,NEW_VALUE,CREATE_DATE_TIME,REPORTID) values ('07DDB3A46AFF4062930686581A38F225','RESULT',to_timestamp('23-11-23 2:27:19.418000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'60','100',to_timestamp('23-11-23 2:27:19.418000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'68CEADCF5640483E950D481B7B928C41');
Insert into SCHOOL_KAUR_2211871.MODIFICATIONS (MODIFICATION_ID,FIELD_NAME,MODIFICATION_DATE_TIME,OLD_VALUE,NEW_VALUE,CREATE_DATE_TIME,REPORTID) values ('FC9878936D1B46FDA9004302037101C2','RESULT',to_timestamp('23-11-23 2:29:48.869000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'100','90',to_timestamp('23-11-23 2:29:48.869000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'68CEADCF5640483E950D481B7B928C41');
REM INSERTING into SCHOOL_KAUR_2211871.REPORTS
SET DEFINE OFF;
Insert into SCHOOL_KAUR_2211871.REPORTS (REPORTID,STUDENTID,TEACHERID,RESULT,COMMENTS,CREATEDDATE,LASTMODIFIEDDATE,EXAM_DATE,COURSEID) values ('09136094FFA64D79B9F5002F09B7B7EF','C106A56DFCB14305988EA8D3A2521AF9','7056DCDA9BF24C4592DC65900C9E476D',30,'FAIL',to_timestamp('23-11-23 4:01:55.587000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('05-12-23 4:54:42.892000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_date('23-11-10','DD-MM-RR'),'275AF885B6C34755A34BA710E96BC897');
Insert into SCHOOL_KAUR_2211871.REPORTS (REPORTID,STUDENTID,TEACHERID,RESULT,COMMENTS,CREATEDDATE,LASTMODIFIEDDATE,EXAM_DATE,COURSEID) values ('A1EC19DDA97C4691AFD86B9D234376A1','E031DC7071004CEDA383BF03C6E78736','E30593D4E95F405A8A44DE456CD6E29C',90,'PASS',to_timestamp('02-11-23 4:04:27.143000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('05-12-23 4:54:42.897000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_date('09-11-23','DD-MM-RR'),'DA02A192F3C84B73BD4169FAEC4A1098');
Insert into SCHOOL_KAUR_2211871.REPORTS (REPORTID,STUDENTID,TEACHERID,RESULT,COMMENTS,CREATEDDATE,LASTMODIFIEDDATE,EXAM_DATE,COURSEID) values ('6DEE818CA9F44796BC13D8366B75A9B2','C106A56DFCB14305988EA8D3A2521AF9','5D9A53AABC9C4BE196937652DB69004B',80,'PASS',to_timestamp('02-11-23 4:06:03.724000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('05-12-23 4:54:42.899000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_date('10-11-23','DD-MM-RR'),'2');
Insert into SCHOOL_KAUR_2211871.REPORTS (REPORTID,STUDENTID,TEACHERID,RESULT,COMMENTS,CREATEDDATE,LASTMODIFIEDDATE,EXAM_DATE,COURSEID) values ('C0B78847C53C40D0A5A2C79FFDF12FBF','FBB77796234342B695DA4B070CEE5420','7056DCDA9BF24C4592DC65900C9E476D',50,'FAIL',to_timestamp('02-11-23 4:07:47.331000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('05-12-23 4:54:42.902000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_date('17-11-23','DD-MM-RR'),'4');
Insert into SCHOOL_KAUR_2211871.REPORTS (REPORTID,STUDENTID,TEACHERID,RESULT,COMMENTS,CREATEDDATE,LASTMODIFIEDDATE,EXAM_DATE,COURSEID) values ('68CEADCF5640483E950D481B7B928C41','C106A56DFCB14305988EA8D3A2521AF9','E30593D4E95F405A8A44DE456CD6E29C',90,'PASS',to_timestamp('09-11-23 12:10:15.562000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('05-12-23 4:54:42.904000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_date('20-11-23','DD-MM-RR'),'DA02A192F3C84B73BD4169FAEC4A1098');
Insert into SCHOOL_KAUR_2211871.REPORTS (REPORTID,STUDENTID,TEACHERID,RESULT,COMMENTS,CREATEDDATE,LASTMODIFIEDDATE,EXAM_DATE,COURSEID) values ('84CC274A580C432CBFA256A5A959C887','C106A56DFCB14305988EA8D3A2521AF9','7056DCDA9BF24C4592DC65900C9E476D',50,'PASS',to_timestamp('05-12-23 5:57:12.813000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('11-12-23 6:55:12.262000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_date('03-12-23','DD-MM-RR'),'4');
Insert into SCHOOL_KAUR_2211871.REPORTS (REPORTID,STUDENTID,TEACHERID,RESULT,COMMENTS,CREATEDDATE,LASTMODIFIEDDATE,EXAM_DATE,COURSEID) values ('9A0566A0BA5F4E299B4B48444C6E9EF2','C106A56DFCB14305988EA8D3A2521AF9','7056DCDA9BF24C4592DC65900C9E476D',50,'PASS',to_timestamp('05-12-23 5:57:12.813000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('11-12-23 6:55:12.322000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_date('03-12-23','DD-MM-RR'),'2');
REM INSERTING into SCHOOL_KAUR_2211871.STUDENTS
SET DEFINE OFF;
Insert into SCHOOL_KAUR_2211871.STUDENTS (STUDENTID,LASTNAME,FIRSTNAME,ADDRESS,CITY,POSTALCODE,STUDENTNUMBER,CREATEDDATE,LASTMODIFIEDDATE,EXAM_TRIES,ALLERGIES) values ('FCAA6B769C234D99AA46ACAAFA6B2709','KAUR','SIMAR','Du fort','Montreal','2B3 4B2','8',to_timestamp('23-11-23 6:14:30.970000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('23-11-23 6:14:30.970000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),1,'PEANUTS');
Insert into SCHOOL_KAUR_2211871.STUDENTS (STUDENTID,LASTNAME,FIRSTNAME,ADDRESS,CITY,POSTALCODE,STUDENTNUMBER,CREATEDDATE,LASTMODIFIEDDATE,EXAM_TRIES,ALLERGIES) values ('E031DC7071004CEDA383BF03C6E78736','KAUR','HARSHARAN','1255 DU FORT','NONTREAL','H3H2NC','100',to_timestamp('02-11-23 3:48:31.505000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('09-11-23 11:17:20.841000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),1,'Student is healthy');
Insert into SCHOOL_KAUR_2211871.STUDENTS (STUDENTID,LASTNAME,FIRSTNAME,ADDRESS,CITY,POSTALCODE,STUDENTNUMBER,CREATEDDATE,LASTMODIFIEDDATE,EXAM_TRIES,ALLERGIES) values ('C106A56DFCB14305988EA8D3A2521AF9','KAUR','MANPREET','1212 ST MATHEU','TORONTO','H2H3NG','101',to_timestamp('02-11-23 3:48:31.515000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('05-12-23 5:57:29.585000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),5,'Student is healthy');
Insert into SCHOOL_KAUR_2211871.STUDENTS (STUDENTID,LASTNAME,FIRSTNAME,ADDRESS,CITY,POSTALCODE,STUDENTNUMBER,CREATEDDATE,LASTMODIFIEDDATE,EXAM_TRIES,ALLERGIES) values ('FBB77796234342B695DA4B070CEE5420','SINGH','SAM','12 ST MATHEU','ONTARIO','5B7 6G5','7',to_timestamp('02-11-23 3:48:31.517000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('23-11-23 6:26:30.143000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),1,'PEANUTS');
REM INSERTING into SCHOOL_KAUR_2211871.TEACHERS
SET DEFINE OFF;
Insert into SCHOOL_KAUR_2211871.TEACHERS (TEACHERID,LASTNAME,FIRSTNAME,EMAIL,SALARY,CREATEDDATE,LASTMODIFIEDDATE,SOCIAL_INSURANCE_NUMBER,INSURANCE_RATE) values ('E30593D4E95F405A8A44DE456CD6E29C','SHARMA','JOE','joe123@gmail.com',55,to_timestamp('02-11-23 3:52:16.334000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('09-11-23 11:15:20.319000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'123456789',20);
Insert into SCHOOL_KAUR_2211871.TEACHERS (TEACHERID,LASTNAME,FIRSTNAME,EMAIL,SALARY,CREATEDDATE,LASTMODIFIEDDATE,SOCIAL_INSURANCE_NUMBER,INSURANCE_RATE) values ('5D9A53AABC9C4BE196937652DB69004B','BING','MONICA','monica23@gmail.com',27,to_timestamp('02-11-23 3:52:16.341000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('09-11-23 11:08:45.180000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'987123234',10);
Insert into SCHOOL_KAUR_2211871.TEACHERS (TEACHERID,LASTNAME,FIRSTNAME,EMAIL,SALARY,CREATEDDATE,LASTMODIFIEDDATE,SOCIAL_INSURANCE_NUMBER,INSURANCE_RATE) values ('7056DCDA9BF24C4592DC65900C9E476D','GREEN','RACHEL','rachel45@gmail.com',50,to_timestamp('02-11-23 3:52:16.344000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('09-11-23 11:08:45.187000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'987654321',30);
REM INSERTING into SCHOOL_KAUR_2211871.TIMESHEETS
SET DEFINE OFF;
Insert into SCHOOL_KAUR_2211871.TIMESHEETS (TIMESHEET_ID,TEACHERID,WEEK_START_DATE,HOURS_WORKED,CREATED_DATE_TIME,LAST_MODIFIED_DATE) values ('D9D3D0015EAA49168C189140E003472D','E30593D4E95F405A8A44DE456CD6E29C',to_date('09-11-23','DD-MM-RR'),30,to_timestamp('09-11-23 11:22:33.107000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('09-11-23 11:22:33.107000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into SCHOOL_KAUR_2211871.TIMESHEETS (TIMESHEET_ID,TEACHERID,WEEK_START_DATE,HOURS_WORKED,CREATED_DATE_TIME,LAST_MODIFIED_DATE) values ('5A171AE4F6E247BE89946186515A40C1','5D9A53AABC9C4BE196937652DB69004B',to_date('11-11-23','DD-MM-RR'),40,to_timestamp('09-11-23 11:22:33.116000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('09-11-23 11:22:33.116000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into SCHOOL_KAUR_2211871.TIMESHEETS (TIMESHEET_ID,TEACHERID,WEEK_START_DATE,HOURS_WORKED,CREATED_DATE_TIME,LAST_MODIFIED_DATE) values ('299941535D9D4E03B426CDFC03E1CF19','7056DCDA9BF24C4592DC65900C9E476D',to_date('11-11-23','DD-MM-RR'),50,to_timestamp('09-11-23 11:22:33.120000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('09-11-23 11:22:33.120000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
--------------------------------------------------------
--  DDL for Index TEACHERS_UK_EMAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."TEACHERS_UK_EMAIL" ON "SCHOOL_KAUR_2211871"."TEACHERS" ("EMAIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIMESHEETS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."TIMESHEETS_PK" ON "SCHOOL_KAUR_2211871"."TIMESHEETS" ("TIMESHEET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIMESHEETS_UK_TEACHERID_STARTDATE
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."TIMESHEETS_UK_TEACHERID_STARTDATE" ON "SCHOOL_KAUR_2211871"."TIMESHEETS" ("TEACHERID", "WEEK_START_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIMESHEETS_INDEX_TEACHER_ID
--------------------------------------------------------

  CREATE INDEX "SCHOOL_KAUR_2211871"."TIMESHEETS_INDEX_TEACHER_ID" ON "SCHOOL_KAUR_2211871"."TIMESHEETS" ("TEACHERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MODIFICATIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."MODIFICATIONS_PK" ON "SCHOOL_KAUR_2211871"."MODIFICATIONS" ("MODIFICATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."STUDENTS_PK" ON "SCHOOL_KAUR_2211871"."STUDENTS" ("STUDENTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REPORTS_INDEX_TEACHER_ID
--------------------------------------------------------

  CREATE INDEX "SCHOOL_KAUR_2211871"."REPORTS_INDEX_TEACHER_ID" ON "SCHOOL_KAUR_2211871"."REPORTS" ("TEACHERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REPORTS_INDEX_STUDENT_ID
--------------------------------------------------------

  CREATE INDEX "SCHOOL_KAUR_2211871"."REPORTS_INDEX_STUDENT_ID" ON "SCHOOL_KAUR_2211871"."REPORTS" ("STUDENTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENTS_INDEX_STUDENT_NUMBER
--------------------------------------------------------

  CREATE INDEX "SCHOOL_KAUR_2211871"."STUDENTS_INDEX_STUDENT_NUMBER" ON "SCHOOL_KAUR_2211871"."STUDENTS" ("STUDENTNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TEACHER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."TEACHER_PK" ON "SCHOOL_KAUR_2211871"."TEACHERS" ("TEACHERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TEACHERS_UK_INSURANCE_NUMBER
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."TEACHERS_UK_INSURANCE_NUMBER" ON "SCHOOL_KAUR_2211871"."TEACHERS" ("SOCIAL_INSURANCE_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COURSES_INDEX_COURSE_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."COURSES_INDEX_COURSE_CODE" ON "SCHOOL_KAUR_2211871"."COURSES" ("COURSECODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COURSES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."COURSES_PK" ON "SCHOOL_KAUR_2211871"."COURSES" ("COURSEID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REPORT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCHOOL_KAUR_2211871"."REPORT_PK" ON "SCHOOL_KAUR_2211871"."REPORTS" ("REPORTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger AFTER_INSERT_REPORT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."AFTER_INSERT_REPORT" 
AFTER INSERT ON REPORTS 
FOR EACH ROW 
BEGIN
    UPDATE STUDENTS
    SET EXAM_TRIES = COALESCE(EXAM_TRIES,0) + 1
    WHERE STUDENTID = :NEW.STUDENTID;
END;
-- CREATED BY HARSHARAN KAUR ON 2023-11-06

/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."AFTER_INSERT_REPORT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BLOCK_DELETE_REPORTS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."BLOCK_DELETE_REPORTS" 
BEFORE DELETE ON REPORTS 
FOR EACH ROW
BEGIN

    INSERT INTO MODIFICATIONS(FIELD_NAME, MODIFICATION_DATE_TIME, REPORTID)
    VALUES ('Deletion', CURRENT_TIMESTAMP, :NEW.REPORTID);

    RAISE_APPLICATION_ERROR(-20001, 'DELETE BLOCKED: Deletion of reports marks is not allowed.');
END;
--2023-12-05 HARSHARAN KAUR(2211871) CREATED TRIGGER BLOCK_DELETE_REPORTS.

/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."BLOCK_DELETE_REPORTS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INSERT_COURSES_REGEX
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."INSERT_COURSES_REGEX" 
BEFORE INSERT ON COURSES
FOR EACH ROW
BEGIN
   -- Replacing 'Math' with 'Mathematics'
    IF REGEXP_LIKE(:NEW.COURSENAME, '^Math$', 'i') THEN
        :NEW.COURSENAME := 'Mathematics';
    END IF;
    --replacing 'eng' with 'English' if course begins with'eng' 
    IF REGEXP_LIKE(:NEW.COURSENAME, '^eng', 'i') THEN
        :NEW.COURSENAME := 'English' || SUBSTR(:NEW.COURSENAME, 4);
    END IF;
    --Saving the name in Uppercase only if course contains 'history', 'geography', or 'science'
    IF REGEXP_LIKE(:NEW.COURSENAME, 'history|geography|science', 'i') THEN
        :NEW.COURSENAME := UPPER(:NEW.COURSENAME);
    END IF;
    --  capital the first letter only if a course contains 'self defense' or 'self-defense'
    IF REGEXP_LIKE(:NEW.COURSENAME, 'self[- ]defense', 'i') THEN
        :NEW.COURSENAME := INITCAP(:NEW.COURSENAME);
    END IF;
    --  saving the name in lowercase only if course contains 5 digits in a row.
    IF REGEXP_LIKE(:NEW.COURSENAME, '[0-9]{5}') THEN
       :NEW.COURSENAME := LOWER(:NEW.COURSENAME);
    END IF;
    -- Block the INSERT only if a course contains 'Cancel' or 'Cancelled'
    IF REGEXP_LIKE(:NEW.COURSENAME, '(Cancel|Cancelled)', 'i') THEN
       RAISE_APPLICATION_ERROR(-20000, 'BLOCKED INSERT: COURSE_NAME contains "Cancel" or "Cancelled".');
    END IF;
END;
--2023-12-05 HARSHARAN KAUR(2211871) CREATED TRIGGER INSERT_COURSES_INDEX

/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."INSERT_COURSES_REGEX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INSERT_REPORTS_CHECK_EXAMDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."INSERT_REPORTS_CHECK_EXAMDATE" 
BEFORE INSERT ON REPORTS 
FOR EACH ROW 
BEGIN
--RAISING APPLICATION ERROR FOR INSERT IF EXAM DATE IS IN THE FUTURE
  IF(:NEW.EXAM_DATE>CURRENT_DATE)THEN
     RAISE_APPLICATION_ERROR(-20871,'Error: EXAM_DATE (' || TO_CHAR(:NEW.EXAM_DATE, 'DD MONTH YYYY') || ') cannot be in the future.');
  END IF;
END;
--2023-11-23 TRIGGER CREATED BY HARSHARAN KAUR(2211871)

/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."INSERT_REPORTS_CHECK_EXAMDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REPORT_UPDATE_MODIFICATION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."REPORT_UPDATE_MODIFICATION" 
AFTER UPDATE ON REPORTS 
FOR EACH ROW 
DECLARE NUMBER_OF_FIELDS_MODIFIED NUMBER:=0;
BEGIN
    IF :OLD.STUDENTID != :NEW.STUDENTID THEN
    NUMBER_OF_FIELDS_MODIFIED:=NUMBER_OF_FIELDS_MODIFIED+1;
        INSERT INTO MODIFICATIONS(FIELD_NAME, MODIFICATION_DATE_TIME, OLD_VALUE, NEW_VALUE, REPORTID)
        VALUES('STUDENT_ID', CURRENT_TIMESTAMP, :OLD.STUDENTID, :NEW.STUDENTID, :NEW.REPORTID);
    END IF;

    IF :OLD.TEACHERID != :NEW.TEACHERID THEN
    NUMBER_OF_FIELDS_MODIFIED:=NUMBER_OF_FIELDS_MODIFIED+1;
        INSERT INTO MODIFICATIONS(FIELD_NAME, MODIFICATION_DATE_TIME, OLD_VALUE, NEW_VALUE,REPORTID)
        VALUES('TEACHER_ID', CURRENT_TIMESTAMP, :OLD.TEACHERID, :NEW.TEACHERID,:NEW.REPORTID);
    END IF;

    IF :OLD.RESULT != :NEW.RESULT THEN
    NUMBER_OF_FIELDS_MODIFIED:=NUMBER_OF_FIELDS_MODIFIED+1;
        INSERT INTO MODIFICATIONS(FIELD_NAME, MODIFICATION_DATE_TIME, OLD_VALUE, NEW_VALUE,REPORTID)
        VALUES('RESULT', CURRENT_TIMESTAMP, :OLD.RESULT, :NEW.RESULT,:NEW.REPORTID);
    END IF;

    IF :OLD.COMMENTS != :NEW.COMMENTS THEN
    NUMBER_OF_FIELDS_MODIFIED:=NUMBER_OF_FIELDS_MODIFIED+1;
        INSERT INTO MODIFICATIONS(FIELD_NAME, MODIFICATION_DATE_TIME, OLD_VALUE, NEW_VALUE,REPORTID)
        VALUES('COMMENTS', CURRENT_TIMESTAMP, :OLD.COMMENTS, :NEW.COMMENTS,:NEW.REPORTID);
    END IF;

    IF :OLD.EXAM_DATE != :NEW.EXAM_DATE THEN
    NUMBER_OF_FIELDS_MODIFIED:=NUMBER_OF_FIELDS_MODIFIED+1;
        INSERT INTO MODIFICATIONS(FIELD_NAME, MODIFICATION_DATE_TIME, OLD_VALUE, NEW_VALUE,REPORTID)
        VALUES('EXAM_DATE', CURRENT_TIMESTAMP, :OLD.EXAM_DATE, :NEW.EXAM_DATE,:NEW.REPORTID);
    END IF;
     IF :OLD.REPORTID != :NEW.REPORTID THEN
    NUMBER_OF_FIELDS_MODIFIED:=NUMBER_OF_FIELDS_MODIFIED+1;
        INSERT INTO MODIFICATIONS(FIELD_NAME, MODIFICATION_DATE_TIME, OLD_VALUE, NEW_VALUE)
        VALUES('REPORT_ID', CURRENT_TIMESTAMP, :OLD.REPORTID, :NEW.REPORTID);
    END IF; 
    DBMS_OUTPUT.PUT_LINE('NUMBER OF FIELDS MODIFIED:'|| NUMBER_OF_FIELDS_MODIFIED);
END;
/*TEST
SET SERVEROUTPUT ON;
UPDATE REPORTS SET RESULT=90 WHERE REPORTID='68CEADCF5640483E950D481B7B928C41';*/

--2023-11-08 HARSHARAN KAUR(2211871) CREATED TRIGGER REPORT_UPDATE_MODIFICATION
--2023-11-23 HARSHARAN KAUR(2211871) MODIFIED TRIGGER REPORT_UPDATE_MODIFICATION
/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."REPORT_UPDATE_MODIFICATION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIMESHEET_MODIFY_DATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TIMESHEET_MODIFY_DATE" 
BEFORE UPDATE ON TIMESHEETS 
FOR EACH ROW 
BEGIN
    :NEW.LAST_MODIFIED_DATE := CURRENT_TIMESTAMP;
END;
--2023-11-07      Harsharan Kaur(2211871) Created the COURSES_MODIFY_DATE TRIGGER.
/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TIMESHEET_MODIFY_DATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_COURSES_INSERT_DELETE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_COURSES_INSERT_DELETE" 
AFTER INSERT OR DELETE ON COURSES
FOR EACH ROW
DECLARE
  ACTION VARCHAR2(12):= '';
  COURSE_NAME VARCHAR2(25):='';

BEGIN
    IF INSERTING THEN
        ACTION := 'added';
        COURSE_NAME:= :NEW.COURSENAME;
    END IF;
    IF DELETING THEN
        ACTION := 'deleted';  
        COURSE_NAME:=:OLD.COURSENAME;
    END IF;
    DBMS_OUTPUT.PUT_LINE('COURSE ' || COURSE_NAME || ' was ' || ACTION || ' on ' || TO_CHAR(CURRENT_DATE, 'YYYY/MM/DD'));
END;
--2023-11-23 TRIGGER CREATED BY HARSHARAN KAUR(2211871)

/*TEST
SET SERVEROUTPUT ON;

DECLARE
  PARAM_COURSEID VARCHAR2(200);
  PARAM_COURSENAME VARCHAR2(200);
  PARAM_COURSECODE VARCHAR2(200);
  PARAM_COURSEDESCRIPTION VARCHAR2(200);
BEGIN
  PARAM_COURSENAME := 'DATABASE';
  PARAM_COURSECODE := 'AB16';
  PARAM_COURSEDESCRIPTION := 'SEM6-COURSE';

  INSERT_COURSES_RETURN_COURSEID(
    PARAM_COURSEID => PARAM_COURSEID,
    PARAM_COURSENAME => PARAM_COURSENAME,
    PARAM_COURSECODE => PARAM_COURSECODE,
    PARAM_COURSEDESCRIPTION => PARAM_COURSEDESCRIPTION
  );

DBMS_OUTPUT.PUT_LINE('PARAM_COURSEID = ' || PARAM_COURSEID);



DBMS_OUTPUT.PUT_LINE('PARAM_COURSENAME = ' || PARAM_COURSENAME);

END;
*/

/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_COURSES_INSERT_DELETE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_INSERT_MODIFICATIONS_REGEX
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_INSERT_MODIFICATIONS_REGEX" 
BEFORE INSERT ON MODIFICATIONS 
FOR EACH ROW
BEGIN
--2023-12-05 HARSHARAN KAUR  created TRIGGER.

--CHANGE THE NAME IN UPPERCASE IF FIELD NAME CONTAINS 'Deletion'
    IF REGEXP_LIKE(:NEW.FIELD_NAME, 'Deletion', 'i') THEN
        :NEW.FIELD_NAME := UPPER(:NEW.FIELD_NAME);
    END IF;
    
END;
/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_INSERT_MODIFICATIONS_REGEX" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_MODIFY_COURSES_DATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_MODIFY_COURSES_DATE" 
BEFORE UPDATE ON COURSES 
FOR EACH ROW 
BEGIN
    :NEW.LASTMODIFIEDDATE := CURRENT_TIMESTAMP;
END;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED TRIGGER MODIFY COURSE DATE.
/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_MODIFY_COURSES_DATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_MODIFY_DATE_REPORT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_MODIFY_DATE_REPORT" 
BEFORE UPDATE ON REPORTS
FOR EACH ROW 
BEGIN
    :NEW.LASTMODIFIEDDATE := CURRENT_TIMESTAMP;
END;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED TRIGGER MODIFY DATE REPORT.
/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_MODIFY_DATE_REPORT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_MODIFY_DATE_STUDENTS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_MODIFY_DATE_STUDENTS" 
BEFORE UPDATE ON STUDENTS  
FOR EACH ROW 
BEGIN
    :NEW.LASTMODIFIEDDATE := CURRENT_TIMESTAMP;
END;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED TRIGGER MODIFY DATE STUDENTS.
/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_MODIFY_DATE_STUDENTS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_MODIFY_DATE_TEACHERS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_MODIFY_DATE_TEACHERS" 
BEFORE UPDATE ON TEACHERS 
FOR EACH ROW 
BEGIN
    :NEW.LASTMODIFIEDDATE := CURRENT_TIMESTAMP;
END;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED TRIGGER MODIFY TEACHERS DATE.
/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_MODIFY_DATE_TEACHERS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_SEQUENCE_COURSEID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_SEQUENCE_COURSEID" 
   before insert on "SCHOOL_KAUR_2211871"."COURSES" 
   for each row 
begin  
   if inserting then 
      if :NEW."COURSEID" is null then 
         select SEQUENCE_COURSEID_PK.nextval into :NEW."COURSEID" from dual; 
      end if; 
   end if; 
end;


/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_SEQUENCE_COURSEID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_SEQUENCE_STUDENT_NUMBER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_SEQUENCE_STUDENT_NUMBER" 
   before insert on "SCHOOL_KAUR_2211871"."STUDENTS" 
   for each row 
begin  
   if inserting then 
      if :NEW."STUDENTNUMBER" is null then 
         select 'STUDENT_' || SEQUENCE_STUDENT_NUMBER.nextval into :NEW."STUDENTNUMBER" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "SCHOOL_KAUR_2211871"."TRIGGER_SEQUENCE_STUDENT_NUMBER" ENABLE;
--------------------------------------------------------
--  DDL for Procedure DISPLAY_RESULT_AVERAGE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."DISPLAY_RESULT_AVERAGE" 
(
PARAM_STUDENTID IN VARCHAR2
)
AS 
CUMULATIVE_AVERAGE NUMBER:=0;
CUMULATIVE_SUM NUMBER:=0;
COUNTER_FOR_COURSE NUMBER:=0;
BEGIN
FOR EACH_ROW IN (SELECT REPORTS.EXAM_DATE, REPORTS.RESULT, STUDENTS.FIRSTNAME, STUDENTS.LASTNAME,COURSES.COURSENAME,
(TEACHERS.FIRSTNAME || ' ' || TEACHERS.LASTNAME) AS TEACHER_FULL_NAME 
FROM REPORTS 
JOIN COURSES ON COURSES.COURSEID = REPORTS.COURSEID
JOIN STUDENTS  ON REPORTS.STUDENTID = STUDENTS.STUDENTID 
JOIN TEACHERS ON TEACHERS.TEACHERID = REPORTS.TEACHERID 
WHERE REPORTS.STUDENTID = PARAM_STUDENTID 
ORDER BY REPORTS.EXAM_DATE)
LOOP

COUNTER_FOR_COURSE := COUNTER_FOR_COURSE + 1;
CUMULATIVE_SUM := CUMULATIVE_SUM + EACH_ROW.RESULT;
CUMULATIVE_AVERAGE := (CUMULATIVE_SUM) / (COUNTER_FOR_COURSE);
  --DISPLAY OUTPUT      
DBMS_OUTPUT.PUT_LINE(EACH_ROW.EXAM_DATE || ' ' || EACH_ROW.FIRSTNAME || ' ' || EACH_ROW.LASTNAME || ' ' || EACH_ROW.COURSENAME || ' ' ||
EACH_ROW.TEACHER_FULL_NAME || ' ' || EACH_ROW.RESULT || '% ' || CUMULATIVE_AVERAGE || '%');
END LOOP;
--DISPLAY OUTPUT
DBMS_OUTPUT.PUT_LINE('STUDENT COMPLETED ' || COUNTER_FOR_COURSE || ' COURSES.');
END DISPLAY_RESULT_AVERAGE;
--2023-12-05 HARSHARAN KAUR CREATED PROCEDURE.

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."DISPLAY_RESULT_AVERAGE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure DISPLAY_TEACHERS_AGRREGATE_FUNCTON
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."DISPLAY_TEACHERS_AGRREGATE_FUNCTON" 
AS
BEGIN
DBMS_OUTPUT.PUT_LINE('TEACHER NAMES WHO GIVE MORE THAN 10 COURSES:');
  FOR EACH_ROW IN (SELECT (TEACHERS.LASTNAME||' '|| TEACHERS.FIRSTNAME)
  AS TEACHER_FULL_NAME 
  FROM TEACHERS INNER JOIN REPORTS ON TEACHERS.TEACHERID=REPORTS.TEACHERID 
  GROUP BY TEACHERS.TEACHERID,TEACHERS.LASTNAME,TEACHERS.FIRSTNAME
  HAVING COUNT(DISTINCT COURSEID) >=10)  
  /*Displaying teachers who teaches >= 10 courses using 'distinct' (It will remove duplicate entries)*/

LOOP 
DBMS_OUTPUT.PUT_LINE('TEACHER_FULL_NAME IS:'||EACH_ROW.TEACHER_FULL_NAME);
END LOOP;
--PROCEDURE CREATED BY HARSHARAN KAUR(2211871)
END DISPLAY_TEACHERS_AGRREGATE_FUNCTON;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_COURSES_RETURN_COURSEID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."INSERT_COURSES_RETURN_COURSEID" 
(
PARAM_COURSEID OUT VARCHAR2,
PARAM_COURSENAME IN OUT	VARCHAR2,
PARAM_COURSECODE IN VARCHAR2,
PARAM_COURSEDESCRIPTION	IN VARCHAR2
)
AS 
BEGIN
   -- Checking if the course name starts with 'MS' 
    IF UPPER(SUBSTR(PARAM_COURSENAME, 1, 2)) = 'MS' THEN
        PARAM_COURSENAME := 'Microsoft' || SUBSTR(PARAM_COURSENAME, 3);
    END IF;
    --Inserting into the courses
    INSERT INTO COURSES (COURSENAME,COURSECODE,COURSEDESCRIPTION)
    VALUES (PARAM_COURSENAME,PARAM_COURSECODE,PARAM_COURSEDESCRIPTION)
    RETURNING COURSEID INTO PARAM_COURSEID; 
    --RETURNING WILL RETURN THE COURSEID OF INSERTED ROW THEN IT WILL STORE THE VALUE INTO PARAM_COURSEID
END INSERT_COURSES_RETURN_COURSEID;
--2023-11-23 PROCEDURE CREATED BY HARSHARAN KAUR(2211871).
/*TEST
DECLARE
  PARAM_COURSEID VARCHAR2(200);
  PARAM_COURSENAME VARCHAR2(200);
  PARAM_COURSECODE VARCHAR2(200);
  PARAM_COURSEDESCRIPTION VARCHAR2(200);
BEGIN
  PARAM_COURSENAME := 'MSSQL';
  PARAM_COURSECODE := 'AB15';
  PARAM_COURSEDESCRIPTION := 'SEM5-COURSE';

  INSERT_COURSES_RETURN_COURSEID(
    PARAM_COURSEID => PARAM_COURSEID,
    PARAM_COURSENAME => PARAM_COURSENAME,
    PARAM_COURSECODE => PARAM_COURSECODE,
    PARAM_COURSEDESCRIPTION => PARAM_COURSEDESCRIPTION
  );
  
DBMS_OUTPUT.PUT_LINE('PARAM_COURSEID = ' || PARAM_COURSEID);

  
   
DBMS_OUTPUT.PUT_LINE('PARAM_COURSENAME = ' || PARAM_COURSENAME);

END;
*/

/*TEST
DECLARE
  PARAM_COURSEID VARCHAR2(200);
BEGIN
  PARAM_COURSEID := '275AF885B6C34755A34BA710E96BC897';

  PROCEDURE_DELETE_COURSES(
    PARAM_COURSEID => PARAM_COURSEID
  ); 
END;*/

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."INSERT_COURSES_RETURN_COURSEID" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_DELETE_COURSES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_DELETE_COURSES" 
(
PARAM_COURSEID IN VARCHAR2
)
AS 
BEGIN
  DELETE FROM COURSES WHERE COURSEID=PARAM_COURSEID;
END PROCEDURE_DELETE_COURSES;
--2023-11-23 PROCEDURE CREATED BY HARSHARAN KAUR(2211871)
/*TEST
DECLARE
  PARAM_COURSEID VARCHAR2(200);
BEGIN
  PARAM_COURSEID := '275AF885B6C34755A34BA710E96BC897';

  PROCEDURE_DELETE_COURSES(
    PARAM_COURSEID => PARAM_COURSEID
  ); 
END;
*/

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_DELETE_COURSES" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_DELETE_REPORTS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_DELETE_REPORTS" 
(
PARAM_STUDENTID IN VARCHAR2,
PARAM_TEACHERID IN VARCHAR2
)
AS 
BEGIN
  DELETE FROM REPORTS WHERE STUDENTID=PARAM_STUDENTID AND TEACHERID=PARAM_TEACHERID;
END PROCEDURE_DELETE_REPORTS;
--2023-11-08 HARSHARAN KAUR(2211871) CREATED PROCEDURE DELETE

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_DELETE_REPORTS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_DELETE_TEACHERS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_DELETE_TEACHERS" 
(PARAM_TEACHERID IN VARCHAR2 
) AS 
BEGIN
    DELETE FROM TEACHERS
    WHERE TEACHERID = PARAM_TEACHERID;
END PROCEDURE_DELETE_TEACHERS;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED PROCEDURE DELETE

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_DELETE_TEACHERS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_DELETE_TIMESHEETS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_DELETE_TIMESHEETS" 
(
PARAM_TEACHER_ID IN VARCHAR2
,PARAM_WEEK_START_DATE DATE
)
AS 
BEGIN
    DELETE FROM TIMESHEETS
    WHERE TEACHERID = PARAM_TEACHER_ID AND WEEK_START_DATE=PARAM_WEEK_START_DATE;
END PROCEDURE_DELETE_TIMESHEETS;
--2023-11-06 HARSHARAN KAUR(2211871) CREATED PROCEDURE DELETE

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_DELETE_TIMESHEETS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_DISPLAY_HIGHEST_RESULTS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_DISPLAY_HIGHEST_RESULTS" 
(
 PARAM_TEACHERID IN VARCHAR2, 
 PARAM_HIGHEST_MARKS OUT NUMBER,
 PARAM_NAME_OF_COURSE OUT VARCHAR2
)

AS 
BEGIN

SELECT COURSES.COURSENAME,MAX(RESULT)
INTO PARAM_NAME_OF_COURSE,PARAM_HIGHEST_MARKS
FROM REPORTS
INNER JOIN COURSES ON REPORTS.COURSEID=COURSES.COURSEID
WHERE TEACHERID=PARAM_TEACHERID
GROUP BY COURSES.COURSENAME
ORDER BY MAX(RESULT) DESC
FETCH FIRST ROW ONLY;
--PROCEDURE CREATED BY HARSHARAN KAUR(2211871)
END PROCEDURE_DISPLAY_HIGHEST_RESULTS;

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_DISPLAY_HIGHEST_RESULTS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_INSERT_REPORTS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_INSERT_REPORTS" 
(
PARAM_STUDENTID IN VARCHAR2,
PARAM_TEACHERID IN VARCHAR2,
PARAM_RESULT IN NUMBER,
PARAM_COMMENTS IN VARCHAR2,
PARAM_EXAM_DATE IN DATE,
PARAM_NUMBER_OF_EXAMS_DONE OUT NUMBER
)
AS 
BEGIN
     --Calculate the number of exams done by student
     SELECT COUNT(*) INTO PARAM_NUMBER_OF_EXAMS_DONE FROM REPORTS 
     WHERE STUDENTID=PARAM_STUDENTID;
     --RAISE APPLICATION ERROR FOR INSERT IF NO_OF_EXAMS_DONE>20 ELSE PERFORM INSERT
     IF(PARAM_NUMBER_OF_EXAMS_DONE>=20) THEN
     RAISE_APPLICATION_ERROR(-20872,'ERROR: STUDENT ID '||PARAM_STUDENTID|| 'reached the maximum number of courses in the school');
     ELSE
     INSERT INTO REPORTS(STUDENTID,TEACHERID,RESULT,COMMENTS,EXAM_DATE)
     VALUES(PARAM_STUDENTID,PARAM_TEACHERID,PARAM_RESULT,PARAM_COMMENTS,PARAM_EXAM_DATE);
     DBMS_OUTPUT.PUT_LINE('Report inserted successfully.');
     END IF;   
END PROCEDURE_INSERT_REPORTS;
--2023-11-08 PROCEDURE CREATED BY HARSHARAN KAUR(2211871) .
--2023-11-23 PROCEDURE MODIFIED BY HARSHARAN KAUR(2211871).

/* TEST:
SET SERVEROUTPUT ON;

DECLARE
  PARAM_STUDENTID VARCHAR2(200);
  PARAM_TEACHERID VARCHAR2(200);
  PARAM_RESULT NUMBER;
  PARAM_COMMENTS VARCHAR2(200);
  PARAM_EXAM_DATE DATE;
  PARAM_NUMBER_OF_EXAMS_DONE NUMBER;
BEGIN

  PARAM_STUDENTID := 'C106A56DFCB14305988EA8D3A2521AF9';
  PARAM_TEACHERID := '7056DCDA9BF24C4592DC65900C9E476D';
  PARAM_RESULT := 30;
  PARAM_COMMENTS := 'FAIL';
  PARAM_EXAM_DATE := to_date('23-11-23','yyyy-MM-dd');

  PROCEDURE_INSERT_REPORTS(
    PARAM_STUDENTID => PARAM_STUDENTID,
    PARAM_TEACHERID => PARAM_TEACHERID,
    PARAM_RESULT => PARAM_RESULT,
    PARAM_COMMENTS => PARAM_COMMENTS,
    PARAM_EXAM_DATE => PARAM_EXAM_DATE,
    PARAM_NUMBER_OF_EXAMS_DONE => PARAM_NUMBER_OF_EXAMS_DONE
  );
    
    DBMS_OUTPUT.PUT_LINE('PARAM_NUMBER_OF_EXAMS_DONE = ' || PARAM_NUMBER_OF_EXAMS_DONE);
    
END;

*/

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_INSERT_REPORTS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_INSERT_TIMESHEETS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_INSERT_TIMESHEETS" 
(
PARAM_TEACHER_ID IN VARCHAR2 
,PARAM_WEEK_START_DATE IN DATE 
,PARAM_HOURS_WORKED IN DECIMAL
)
AS 
BEGIN
     INSERT INTO TIMESHEETS(TEACHERID, WEEK_START_DATE, HOURS_WORKED)
    VALUES(PARAM_TEACHER_ID, PARAM_WEEK_START_DATE, PARAM_HOURS_WORKED);
END PROCEDURE_INSERT_TIMESHEETS;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED PROCEDURE INSERT

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_INSERT_TIMESHEETS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_STUDENTS_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_STUDENTS_DELETE" 
(PARAM_STUDENTID IN VARCHAR2 
) AS 
BEGIN
   --DELETE A ROW FROM THE STUDENTS TABLE
    DELETE FROM STUDENTS 
    WHERE STUDENTID = PARAM_STUDENTID;
END PROCEDURE_STUDENTS_DELETE;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED PROCEDURE DELETE
/*TEST
DECLARE
  PARAM_STUDENTID VARCHAR2(200);
BEGIN
  PARAM_STUDENTID := 'F6C4F734AF5E4C5C9B5F54F215FFC219';

  PROCEDURE_STUDENTS_DELETE(
    PARAM_STUDENTID => PARAM_STUDENTID
  );
--rollback; 
END;
*/

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_STUDENTS_DELETE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_STUDENT_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_STUDENT_INSERT" 
(
  PARAM_LASTNAME IN VARCHAR2 
, PARAM_FIRSTNAME IN VARCHAR2 
, PARAM_ADDRESS IN VARCHAR2 
, PARAM_CITY IN VARCHAR2 
, PARAM_POSTALCODE IN VARCHAR2
, PARAM_STUDENTNUMBER IN VARCHAR2 
, PARAM_EXAM_TRIES IN INT
, PARAM_ALLERGIES IN OUT VARCHAR2
) AS 
BEGIN
 --check if student has allergy to 'peanuts' then save the allergy in the table
    IF UPPER(PARAM_ALLERGIES) LIKE '%PEANUTS%' THEN
        PARAM_ALLERGIES := UPPER(PARAM_ALLERGIES);
    END IF;
    -- Insert a new row into students table.
    INSERT INTO STUDENTS(LASTNAME, FIRSTNAME, ADDRESS, CITY, POSTALCODE, STUDENTNUMBER,EXAM_TRIES,ALLERGIES)
    VALUES(PARAM_LASTNAME, PARAM_FIRSTNAME, PARAM_ADDRESS, PARAM_CITY, PARAM_POSTALCODE, PARAM_STUDENTNUMBER,PARAM_EXAM_TRIES,PARAM_ALLERGIES);

END PROCEDURE_STUDENT_INSERT;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED PROCEDURE INSERT.
--2023-11-06 HARSHARAN KAUR(2211871) EDITED PROCEDURE INSERT.
--2023-11-23 HARSHARAN KAUR(2211871) EDITED PROCEDURE INSERT.
/*TEST
DECLARE
  PARAM_LASTNAME VARCHAR2(200);
  PARAM_FIRSTNAME VARCHAR2(200);
  PARAM_ADDRESS VARCHAR2(200);
  PARAM_CITY VARCHAR2(200);
  PARAM_POSTALCODE VARCHAR2(200);
  PARAM_STUDENTNUMBER VARCHAR2(200);
  PARAM_EXAM_TRIES NUMBER;
  PARAM_ALLERGIES VARCHAR2(200);
BEGIN
  PARAM_LASTNAME := 'Dil';
  PARAM_FIRSTNAME := 'Rohan';
  PARAM_ADDRESS := 'Du fort';
  PARAM_CITY := 'Montreal';
  PARAM_POSTALCODE := '2B3 4B2';
  PARAM_STUDENTNUMBER := NULL;
  PARAM_EXAM_TRIES := 1;
  PARAM_ALLERGIES := 'peanuts';

  PROCEDURE_STUDENT_INSERT(
    PARAM_LASTNAME => PARAM_LASTNAME,
    PARAM_FIRSTNAME => PARAM_FIRSTNAME,
    PARAM_ADDRESS => PARAM_ADDRESS,
    PARAM_CITY => PARAM_CITY,
    PARAM_POSTALCODE => PARAM_POSTALCODE,
    PARAM_STUDENTNUMBER => PARAM_STUDENTNUMBER,
    PARAM_EXAM_TRIES => PARAM_EXAM_TRIES,
    PARAM_ALLERGIES => PARAM_ALLERGIES
  );

DBMS_OUTPUT.PUT_LINE('PARAM_ALLERGIES = ' || PARAM_ALLERGIES);

END;
*/


/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_STUDENT_INSERT" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_TEACHER_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_TEACHER_INSERT" 
(

 PARAM_LASTNAME	IN VARCHAR2
,PARAM_FIRSTNAME IN	VARCHAR2
,PARAM_EMAIL IN	VARCHAR2
,PARAM_SALARY IN NUMBER
,PARAM_SOCIAL_INSURANCE_NUMBER IN VARCHAR2
,PARAM_INSURANCE_RATE IN DECIMAL
)AS 
BEGIN
    INSERT INTO TEACHERS(LASTNAME, FIRSTNAME, EMAIL, SALARY,SOCIAL_INSURANCE_NUMBER,INSURANCE_RATE)
    VALUES(PARAM_LASTNAME, PARAM_FIRSTNAME, PARAM_EMAIL, PARAM_SALARY,PARAM_SOCIAL_INSURANCE_NUMBER,PARAM_INSURANCE_RATE);

END PROCEDURE_TEACHER_INSERT;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED PROCEDURE INSERT
--2023-11-06 HARSHARAN KAUR(2211871) MODIFIED PROCEDURE INSERT

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_TEACHER_INSERT" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_UPDATE_REPORTS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_UPDATE_REPORTS" 
(
PARAM_REPORTID IN VARCHAR2,
PARAM_STUDENTID IN VARCHAR2,
PARAM_TEACHERID IN VARCHAR2,
PARAM_RESULT IN NUMBER,
PARAM_COMMENTS IN VARCHAR2,
PARAM_EXAM_DATE IN DATE
)
AS 
BEGIN
    UPDATE REPORTS SET STUDENTID=PARAM_STUDENTID,TEACHERID=PARAM_TEACHERID,RESULT=PARAM_RESULT,
    COMMENTS=PARAM_COMMENTS,EXAM_DATE=PARAM_EXAM_DATE WHERE REPORTID=PARAM_REPORTID;
END PROCEDURE_UPDATE_REPORTS;
--2023-11-07 HARSHARAN KAUR(2211871) CREATED PROCEDURE UPDATE.

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_UPDATE_REPORTS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_UPDATE_STUDENTS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_UPDATE_STUDENTS" 
(
  PARAM_STUDENTID IN VARCHAR2
, PARAM_LASTNAME IN VARCHAR2 
, PARAM_FIRSTNAME IN VARCHAR2 
, PARAM_ADDRESS IN VARCHAR2 
, PARAM_CITY IN VARCHAR2 
, PARAM_POSTALCODE IN VARCHAR2
, PARAM_STUDENTNUMBER IN VARCHAR2 
, PARAM_EXAM_TRIES IN INT
, PARAM_ALLERGIES IN OUT VARCHAR2 
) AS 
BEGIN
--check if student has allergy to 'peanuts' then save the allergy in the table
    IF UPPER(PARAM_ALLERGIES) LIKE '%PEANUTS%' THEN
        PARAM_ALLERGIES := UPPER(PARAM_ALLERGIES);
    END IF;
    -- Update a row into students table.
    UPDATE students SET LASTNAME = PARAM_LASTNAME, FIRSTNAME = PARAM_FIRSTNAME, ADDRESS = PARAM_ADDRESS, 
    CITY = PARAM_CITY, POSTALCODE = PARAM_POSTALCODE, STUDENTNUMBER = PARAM_STUDENTNUMBER, EXAM_TRIES=PARAM_EXAM_TRIES,ALLERGIES=PARAM_ALLERGIES
    WHERE studentid = param_studentid;
END PROCEDURE_UPDATE_STUDENTS;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED PROCEDURE UPDATE.
--2023-11-06 HARSHARAN KAUR(2211871) EDITED PROCEDURE INSERT.
--2023-11-23 HARSHARAN KAUR(2211871) EDITED PROCEDURE INSERT.
/*TEST
DECLARE
  PARAM_STUDENTID VARCHAR2(200);
  PARAM_LASTNAME VARCHAR2(200);
  PARAM_FIRSTNAME VARCHAR2(200);
  PARAM_ADDRESS VARCHAR2(200);
  PARAM_CITY VARCHAR2(200);
  PARAM_POSTALCODE VARCHAR2(200);
  PARAM_STUDENTNUMBER VARCHAR2(200);
  PARAM_EXAM_TRIES NUMBER;
  PARAM_ALLERGIES VARCHAR2(200);
BEGIN
  PARAM_STUDENTID := 'FBB77796234342B695DA4B070CEE5420';
  PARAM_LASTNAME := 'SINGH';
  PARAM_FIRSTNAME := 'SAM';
  PARAM_ADDRESS := '12 ST MATHEU';
  PARAM_CITY := 'ONTARIO';
  PARAM_POSTALCODE := NULL;
  PARAM_STUDENTNUMBER := NULL;
  PARAM_EXAM_TRIES := NULL;
  PARAM_ALLERGIES := 'Peanuts';

  PROCEDURE_UPDATE_STUDENTS(
    PARAM_STUDENTID => PARAM_STUDENTID,
    PARAM_LASTNAME => PARAM_LASTNAME,
    PARAM_FIRSTNAME => PARAM_FIRSTNAME,
    PARAM_ADDRESS => PARAM_ADDRESS,
    PARAM_CITY => PARAM_CITY,
    PARAM_POSTALCODE => PARAM_POSTALCODE,
    PARAM_STUDENTNUMBER => PARAM_STUDENTNUMBER,
    PARAM_EXAM_TRIES => PARAM_EXAM_TRIES,
    PARAM_ALLERGIES => PARAM_ALLERGIES
  );

DBMS_OUTPUT.PUT_LINE('PARAM_ALLERGIES = ' || PARAM_ALLERGIES); 
END;

*/

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_UPDATE_STUDENTS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_UPDATE_TEACHERS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_UPDATE_TEACHERS" 
(PARAM_TEACHERID IN VARCHAR2
,PARAM_LASTNAME	IN VARCHAR2
,PARAM_FIRSTNAME IN	VARCHAR2
,PARAM_EMAIL IN	VARCHAR2
,PARAM_SALARY IN NUMBER
,PARAM_SOCIAL_INSURANCE_NUMBER IN VARCHAR2
,PARAM_INSURANCE_RATE IN DECIMAL
)
AS 
BEGIN
    UPDATE TEACHERS SET LASTNAME= PARAM_LASTNAME, FIRSTNAME = PARAM_FIRSTNAME, EMAIL = PARAM_EMAIL,SALARY = PARAM_SALARY,
    SOCIAL_INSURANCE_NUMBER=PARAM_SOCIAL_INSURANCE_NUMBER,INSURANCE_RATE=PARAM_INSURANCE_RATE
    WHERE TEACHERID = PARAM_TEACHERID;
END PROCEDURE_UPDATE_TEACHERS;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED PROCEDURE UPDATE.
--2023-11-06 HARSHARAN KAUR(2211871) MODIFIED PROCEDURE UPDATE.

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_UPDATE_TEACHERS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Procedure PROCEDURE_UPDATE_TIMESHEETS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "SCHOOL_KAUR_2211871"."PROCEDURE_UPDATE_TIMESHEETS" 
(
PARAM_TIMESHEET_ID IN VARCHAR2
,PARAM_TEACHER_ID IN VARCHAR2 
,PARAM_WEEK_START_DATE IN DATE 
,PARAM_HOURS_WORKED IN DECIMAL
)
AS 
BEGIN
  UPDATE TIMESHEETS SET TEACHERID=PARAM_TEACHER_ID,WEEK_START_DATE=PARAM_WEEK_START_DATE,
  HOURS_WORKED=PARAM_HOURS_WORKED WHERE TIMESHEET_ID=PARAM_TIMESHEET_ID;
END PROCEDURE_UPDATE_TIMESHEETS;
--2023-11-06 HARSHARAN KAUR(2211871) CREATED PROCEDURE UPDATE.

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."PROCEDURE_UPDATE_TIMESHEETS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function DISPLAY_STUDENT_BASED_ON_AVERAGE_MARKS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."DISPLAY_STUDENT_BASED_ON_AVERAGE_MARKS" RETURN VARCHAR2 AS 
BEGIN
  DBMS_OUTPUT.PUT_LINE('STUDENT DETAILS ARE: ');
 FOR EACH_ROW IN(SELECT AVG(RESULT) ,STUDENTS.LASTNAME,STUDENTS.FIRSTNAME,STUDENTS.STUDENTNUMBER 
 FROM STUDENTS 
 JOIN REPORTS ON STUDENTS.STUDENTID=REPORTS.STUDENTID
 GROUP BY STUDENTS.LASTNAME,STUDENTS.FIRSTNAME,STUDENTS.STUDENTNUMBER
 HAVING AVG(RESULT) >=80
 ORDER BY STUDENTNUMBER)
 LOOP
 DBMS_OUTPUT.PUT_LINE('STUDENT_NUMBER: '|| EACH_ROW.STUDENTNUMBER||' LAST_NAME: '||
 EACH_ROW.LASTNAME||' FIRST_NAME: '||EACH_ROW.FIRSTNAME); 
 END LOOP;
 RETURN NULL;
END DISPLAY_STUDENT_BASED_ON_AVERAGE_MARKS;
--FUNCTION CREATED BY HARSHARAN KAUR(2211871)

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."DISPLAY_STUDENT_BASED_ON_AVERAGE_MARKS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function DISPLAY_STUDENT_BASED_ON_TEACHER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."DISPLAY_STUDENT_BASED_ON_TEACHER" 
(
PARAM_TEACHERID IN VARCHAR2
)
RETURN TYPE_STUDENT_BASED_ON_TEACHER_TABLE
PIPELINED
AS
BEGIN
    FOR EACH_ROW IN (SELECT LASTNAME,FIRSTNAME,STUDENTNUMBER 
    FROM STUDENTS INNER JOIN REPORTS ON STUDENTS.STUDENTID=REPORTS.STUDENTID 
    WHERE REPORTS.TEACHERID=PARAM_TEACHERID
    ORDER BY LASTNAME,FIRSTNAME)
LOOP
    PIPE ROW(TYPE_STUDENT_BASED_ON_TEACHER_ROW(EACH_ROW.LASTNAME,EACH_ROW.FIRSTNAME,EACH_ROW.STUDENTNUMBER));
END LOOP;
RETURN;
END DISPLAY_STUDENT_BASED_ON_TEACHER;
--FUNCTION CREATED BY HARSHARAN KAUR(2211871)

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."DISPLAY_STUDENT_BASED_ON_TEACHER" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function DISPLAY_STUDENT_WITH_HIGHEST_LOWEST_AVERAGE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."DISPLAY_STUDENT_WITH_HIGHEST_LOWEST_AVERAGE" 
(
PARAM_STUDENTID_LOWEST_AVERAGE OUT VARCHAR2
)
RETURN VARCHAR2
AS
STUDENTID_HIGHEST_AVERAGE VARCHAR2(32):= '';
BEGIN
--FOR LOWEST AVERAGE
  SELECT STUDENTID INTO PARAM_STUDENTID_LOWEST_AVERAGE
  FROM REPORTS GROUP BY STUDENTID ORDER BY AVG(RESULT) ASC 
  FETCH FIRST ROW ONLY;
 --FOR HIGHEST AVERAGE
  SELECT STUDENTID INTO STUDENTID_HIGHEST_AVERAGE
  FROM REPORTS GROUP BY STUDENTID ORDER BY AVG(RESULT)DESC
  FETCH FIRST ROW ONLY;
  RETURN STUDENTID_HIGHEST_AVERAGE;
 END DISPLAY_STUDENT_WITH_HIGHEST_LOWEST_AVERAGE;
 --FUNCTION CREATED BY HARSHARAN KAUR(2211871)

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."DISPLAY_STUDENT_WITH_HIGHEST_LOWEST_AVERAGE" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_SELECT_ALL_ROWS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_SELECT_ALL_ROWS" 
(
  PARAM_STUDENT_ID IN VARCHAR2 
) 
RETURN TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_TABLE 
PIPELINED 
AS 
BEGIN

    FOR each_row in(SELECT REPORTS.REPORTID,REPORTS.STUDENTID,REPORTS.TEACHERID,RESULT, COMMENTS, REPORTS.CREATEDDATE,
    REPORTS.LASTMODIFIEDDATE, EXAM_DATE,TEACHERS.TEACHERID AS TEACHER_ID_FK,TEACHERS.LASTNAME AS TEACHER_LAST_NAME,
    TEACHERS.FIRSTNAME AS TEACHER_FIRST_NAME,TEACHERS.EMAIL AS TEACHER_EMAIL,TEACHERS.SALARY AS TEACHER_SALARY, 
    TEACHERS.SOCIAL_INSURANCE_NUMBER AS TEACHER_SOCIAL_INSURANCE_NUMBER, TEACHERS.INSURANCE_RATE AS TEACHER_INSURANCE_RATE, 
    STUDENTS.STUDENTID AS STUDENT_ID_FK, STUDENTS.STUDENTNUMBER AS STUDENT_NUMBER,STUDENTS.LASTNAME AS STUDENT_LAST_NAME,
    STUDENTS.FIRSTNAME AS STUDENT_FIRST_NAME, STUDENTS.ADDRESS AS STUDENT_ADDRESS,STUDENTS.CITY AS STUDENT_CITY,
    STUDENTS.POSTALCODE AS STUDENT_POSTAL_CODE,STUDENTS.EXAM_TRIES AS STUDENT_EXAM_TRIES
    FROM REPORTS
    INNER JOIN TEACHERS
    ON REPORTS.TEACHERID = TEACHERS.TEACHERID
    INNER JOIN STUDENTS
    ON REPORTS.STUDENTID = STUDENTS.STUDENTID 
    WHERE REPORTS.TEACHERID=TEACHERS.TEACHERID
    ORDER BY REPORTS.CREATEDDATE
    )
    LOOP
    PIPE ROW(TYPE_REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_ROW(
    each_row.REPORTID,each_row.STUDENTID, each_row.TEACHERID,each_row.RESULT,each_row.COMMENTS,each_row.CREATEDDATE,
    each_row.LASTMODIFIEDDATE,each_row.EXAM_DATE,each_row.TEACHER_ID_FK,each_row.TEACHER_LAST_NAME,each_row.TEACHER_FIRST_NAME, 
    each_row.TEACHER_EMAIL,each_row.TEACHER_SALARY,each_row.TEACHER_SOCIAL_INSURANCE_NUMBER,each_row.TEACHER_INSURANCE_RATE,
    each_row.STUDENT_ID_FK,each_row.STUDENT_NUMBER,each_row.STUDENT_LAST_NAME,each_row.STUDENT_FIRST_NAME,each_row.STUDENT_ADDRESS,
    each_row.STUDENT_CITY, each_row.STUDENT_POSTAL_CODE,each_row.STUDENT_EXAM_TRIES));
    END LOOP;
    RETURN;
END REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_SELECT_ALL_ROWS;
--2023-11-08 HARSHARAN KAUR(2211871) CREATED FUNCTION REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_SELECT_ALL_ROWS

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."REPORTS_JOIN_STUDENTS_JOIN_TEACHERS_SELECT_ALL_ROWS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function STUDENT_SELECT_ALL_ROWS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."STUDENT_SELECT_ALL_ROWS" 
RETURN TYPE_STUDENT_TABLE PIPELINED AS 
BEGIN
    FOR each_row IN (SELECT STUDENTID,LASTNAME,FIRSTNAME,ADDRESS,CITY,POSTALCODE,CREATEDDATE,LASTMODIFIEDDATE,
    STUDENTNUMBER,EXAM_TRIES,ALLERGIES FROM STUDENTS ORDER BY STUDENTNUMBER)
    LOOP
    PIPE ROW
        (
          TYPE_STUDENT_ROW
            (each_row.STUDENTID, each_row.STUDENTNUMBER, each_row.LASTNAME,each_row.FIRSTNAME, each_row.ADDRESS,each_row.CITY,
             each_row.POSTALCODE, each_row.CREATEDDATE,each_row.LASTMODIFIEDDATE,each_row.EXAM_TRIES,
             each_row.ALLERGIES
             )
         );
    END LOOP;
    RETURN;
END STUDENT_SELECT_ALL_ROWS;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED FUNCTION SELECT ALL ROWS.

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."STUDENT_SELECT_ALL_ROWS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function STUDENT_SELECT_ONE_ROWS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."STUDENT_SELECT_ONE_ROWS" 
(
    PARAM_STUDENTID IN VARCHAR2
)
RETURN TYPE_STUDENT_TABLE PIPELINED AS 
BEGIN
    FOR each_row IN (SELECT STUDENTID,LASTNAME,FIRSTNAME,ADDRESS,CITY,POSTALCODE,CREATEDDATE,LASTMODIFIEDDATE, STUDENTNUMBER,EXAM_TRIES,ALLERGIES
                    FROM STUDENTS WHERE STUDENTID = PARAM_STUDENTID)
    LOOP PIPE ROW
            (
              TYPE_STUDENT_ROW
                    (each_row.STUDENTID, each_row.STUDENTNUMBER, each_row.LASTNAME,each_row.FIRSTNAME,each_row.ADDRESS, 
                     each_row.CITY,each_row.POSTALCODE, each_row.CREATEDDATE,each_row.LASTMODIFIEDDATE,each_row.EXAM_TRIES,
                     each_row.ALLERGIES)
            );
    END LOOP;
    RETURN;
END STUDENT_SELECT_ONE_ROWS;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED FUNCTION SELECT ONE ROW.
/*TEST
SELECT * FROM STUDENT_SELECT_ONE_ROWS('E031DC7071004CEDA383BF03C6E78736');*/

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."STUDENT_SELECT_ONE_ROWS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function TEACHER_CALCULATE_PAYCHECK
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."TEACHER_CALCULATE_PAYCHECK" 
(
PARAM_SALARY IN NUMBER,
PARAM_INSURANCE_RATE IN NUMBER,
PARAM_HOURS_WORKED IN NUMBER
)
RETURN NUMBER AS
BEGIN
    --Calculating hourly salary after subtracting insurance
    RETURN ((PARAM_SALARY-COALESCE(PARAM_INSURANCE_RATE,0)) * PARAM_HOURS_WORKED);
END TEACHER_CALCULATE_PAYCHECK;
--2023-11-23 FUNCTION CREATED BY HARSHARAN KAUR(2211871)
/*TEST
SELECT TEACHER_CALCULATE_PAYCHECK(20,2,10) FROM DUAL;*/

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TEACHER_CALCULATE_PAYCHECK" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function TEACHER_SELECT_ALL_ROWS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."TEACHER_SELECT_ALL_ROWS" 
RETURN TYPE_TEACHER_TABLE PIPELINED AS 
BEGIN
    FOR each_row IN (SELECT TEACHERID,LASTNAME,FIRSTNAME,EMAIL,SALARY,CREATEDDATE,LASTMODIFIEDDATE,
                     SOCIAL_INSURANCE_NUMBER,INSURANCE_RATE FROM TEACHERS ORDER BY LASTNAME)
    LOOP PIPE ROW
            (
             TYPE_TEACHER_ROW
               (each_row.TEACHERID, each_row.LASTNAME, each_row.FIRSTNAME,each_row.EMAIL, each_row.SALARY, 
                each_row.CREATEDDATE,each_row.LASTMODIFIEDDATE,each_row.SOCIAL_INSURANCE_NUMBER,
                each_row.INSURANCE_RATE)
            );
    END LOOP;
    RETURN;
END TEACHER_SELECT_ALL_ROWS;
--2023-11-01 HARSHARAN KAUR(2211871) CREATED FUNCTION SELECT ALL ROWS.

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TEACHER_SELECT_ALL_ROWS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function TEACHER_SELECT_ONE_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."TEACHER_SELECT_ONE_ROW" 
(
  PARAM_TEACHERID VARCHAR2
)
RETURN TYPE_TEACHER_TABLE PIPELINED AS 
BEGIN
    FOR each_row IN (SELECT TEACHERID,LASTNAME,FIRSTNAME,EMAIL,SALARY,CREATEDDATE, LASTMODIFIEDDATE, 
                     SOCIAL_INSURANCE_NUMBER,INSURANCE_RATE FROM TEACHERS WHERE TEACHERID=PARAM_TEACHERID)
    LOOP PIPE ROW
            (TYPE_TEACHER_ROW
                (each_row.TEACHERID,each_row.LASTNAME,each_row.FIRSTNAME,each_row.EMAIL, each_row.SALARY, 
                 each_row.CREATEDDATE,each_row.LASTMODIFIEDDATE,each_row.SOCIAL_INSURANCE_NUMBER,
                 each_row.INSURANCE_RATE)
            );
    END LOOP;
    --2023-11-01 HARSHARAN KAUR(2211871) CREATED FUNCTION SELECT ONE ROW.

    RETURN;
END TEACHER_SELECT_ONE_ROW;

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TEACHER_SELECT_ONE_ROW" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function TIMESHEETS_JOIN_TEACHERS_SELECT_ALL_ROWS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."TIMESHEETS_JOIN_TEACHERS_SELECT_ALL_ROWS" 
(
  PARAM_TEACHER_ID IN VARCHAR2 
)
RETURN TYPE_TIMESHEETS_JOIN_TEACHERS_TABLE PIPELINED AS 
BEGIN

    FOR each_row in(SELECT TIMESHEET_ID, TIMESHEETS.TEACHERID, WEEK_START_DATE, HOURS_WORKED, 
    TIMESHEETS.CREATED_DATE_TIME, TIMESHEETS.LAST_MODIFIED_DATE,TEACHERS.TEACHERID AS TIMESHEETS_FK_TEACHERID, 
    LASTNAME, FIRSTNAME, EMAIL, SALARY,SOCIAL_INSURANCE_NUMBER, INSURANCE_RATE ,
    TEACHER_CALCULATE_PAYCHECK(SALARY,INSURANCE_RATE,HOURS_WORKED)AS WEEKLY_PAYCHECK_AMOUNT
    FROM TEACHERS
    INNER JOIN TIMESHEETS
    ON TIMESHEETS.TEACHERID = TEACHERS.TEACHERID
    WHERE TEACHERS.TEACHERID = PARAM_TEACHER_ID
    ORDER BY CREATED_DATE_TIME
    )
    LOOP
    PIPE ROW(TYPE_TIMESHEETS_JOIN_TEACHERS_ROW(each_row.TIMESHEET_ID,each_row.TEACHERID, each_row.WEEK_START_DATE, each_row.HOURS_WORKED, each_row.CREATED_DATE_TIME, 
    each_row.LAST_MODIFIED_DATE, each_row.TIMESHEETS_FK_TEACHERID, each_row.LASTNAME, each_row.FIRSTNAME, 
    each_row.EMAIL, each_row.SALARY, each_row.SOCIAL_INSURANCE_NUMBER,each_row.INSURANCE_RATE,each_row.WEEKLY_PAYCHECK_AMOUNT));
    END LOOP;
    RETURN;
    
END TIMESHEETS_JOIN_TEACHERS_SELECT_ALL_ROWS;
--2023-11-08 HARSHARAN KAUR(2211871) CREATED FUNCTION TIMESHEETS_JOIN_TEACHERS_SELECT_ALL_ROWS
--2023-11-23 HARSHARAN KAUR(2211871) MODIFIED FUNCTION TIMESHEETS_JOIN_TEACHERS_SELECT_ALL_ROWS

/* TEST:
SELECT * FROM TIMESHEETS_JOIN_TEACHERS_SELECT_ALL_ROWS('E30593D4E95F405A8A44DE456CD6E29C');
*/

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TIMESHEETS_JOIN_TEACHERS_SELECT_ALL_ROWS" TO "WEBSITE";
--------------------------------------------------------
--  DDL for Function TIMESHEETS_SELECT_ONE_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "SCHOOL_KAUR_2211871"."TIMESHEETS_SELECT_ONE_ROW" 
(
  PARAM_TIMESHEET_ID IN VARCHAR2 
) RETURN TYPE_TIMESHEET_TABLE PIPELINED AS
BEGIN

    -- 2023-11-07	Harsharan Kaur(2211871)	Created the function TIMESHEETS_SELECT_ONE_ROW.
    FOR each_row IN (SELECT TIMESHEET_ID, TEACHERID, WEEK_START_DATE, HOURS_WORKED, CREATED_DATE_TIME, LAST_MODIFIED_DATE
    FROM TIMESHEETS WHERE TIMESHEET_ID = PARAM_TIMESHEET_ID)
    LOOP PIPE ROW
            (
              TYPE_TIMESHEET_ROW
                (each_row.TIMESHEET_ID,each_row.TEACHERID,each_row.WEEK_START_DATE,each_row.HOURS_WORKED,
                each_row.CREATED_DATE_TIME,each_row.LAST_MODIFIED_DATE)
            );
    END LOOP;
    RETURN;
END TIMESHEETS_SELECT_ONE_ROW;

/

  GRANT EXECUTE ON "SCHOOL_KAUR_2211871"."TIMESHEETS_SELECT_ONE_ROW" TO "WEBSITE";
--------------------------------------------------------
--  Constraints for Table MODIFICATIONS
--------------------------------------------------------

  ALTER TABLE "SCHOOL_KAUR_2211871"."MODIFICATIONS" MODIFY ("MODIFICATION_ID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."MODIFICATIONS" ADD CONSTRAINT "MODIFICATIONS_PK" PRIMARY KEY ("MODIFICATION_ID")
  USING INDEX "SCHOOL_KAUR_2211871"."MODIFICATIONS_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REPORTS
--------------------------------------------------------

  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" MODIFY ("REPORTID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" MODIFY ("STUDENTID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" MODIFY ("TEACHERID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" MODIFY ("RESULT" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" MODIFY ("CREATEDDATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" MODIFY ("LASTMODIFIEDDATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" MODIFY ("EXAM_DATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" ADD CONSTRAINT "REPORT_PK" PRIMARY KEY ("REPORTID")
  USING INDEX "SCHOOL_KAUR_2211871"."REPORT_PK"  ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" ADD CONSTRAINT "REPORT_CHECK_RESULT" CHECK (Result >= 0 AND Result <= 100) ENABLE;
--------------------------------------------------------
--  Constraints for Table STUDENTS
--------------------------------------------------------

  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" ADD CONSTRAINT "STUDENTS_UK_STUDENT_NUMBER" UNIQUE ("STUDENTNUMBER")
  USING INDEX "SCHOOL_KAUR_2211871"."STUDENTS_INDEX_STUDENT_NUMBER"  ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" ADD CONSTRAINT "STUDENTS_CHK_EXAM_TRIES" CHECK (EXAM_TRIES>=0) ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("STUDENTID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("LASTNAME" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("FIRSTNAME" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("CITY" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("POSTALCODE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("STUDENTNUMBER" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("CREATEDDATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("LASTMODIFIEDDATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" MODIFY ("ALLERGIES" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."STUDENTS" ADD CONSTRAINT "STUDENTS_PK" PRIMARY KEY ("STUDENTID")
  USING INDEX "SCHOOL_KAUR_2211871"."STUDENTS_PK"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TEACHERS
--------------------------------------------------------

  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" MODIFY ("TEACHERID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" MODIFY ("LASTNAME" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" MODIFY ("FIRSTNAME" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" MODIFY ("SALARY" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" MODIFY ("CREATEDDATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" MODIFY ("LASTMODIFIEDDATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" MODIFY ("SOCIAL_INSURANCE_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" ADD CONSTRAINT "TEACHER_PK" PRIMARY KEY ("TEACHERID")
  USING INDEX "SCHOOL_KAUR_2211871"."TEACHER_PK"  ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" ADD CONSTRAINT "TEACHERS_UK_EMAIL" UNIQUE ("EMAIL")
  USING INDEX "SCHOOL_KAUR_2211871"."TEACHERS_UK_EMAIL"  ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" ADD CONSTRAINT "TEACHERS_UK_INSURANCE_NUMBER" UNIQUE ("SOCIAL_INSURANCE_NUMBER")
  USING INDEX "SCHOOL_KAUR_2211871"."TEACHERS_UK_INSURANCE_NUMBER"  ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" ADD CONSTRAINT "TEACHERS_CHK_INSURANCE_NUMBER" CHECK (LENGTH(SOCIAL_INSURANCE_NUMBER)=9 AND TO_NUMBER(SOCIAL_INSURANCE_NUMBER)>0) ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" ADD CONSTRAINT "TEACHERS_CHK_INSURANCE_RATE" CHECK (INSURANCE_RATE>=0) ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."TEACHERS" ADD CONSTRAINT "TEACHERS_CHK_SALARY" CHECK (SALARY>=0) ENABLE;
--------------------------------------------------------
--  Constraints for Table TIMESHEETS
--------------------------------------------------------

  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" MODIFY ("TIMESHEET_ID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" MODIFY ("TEACHERID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" MODIFY ("WEEK_START_DATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" MODIFY ("HOURS_WORKED" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" MODIFY ("CREATED_DATE_TIME" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" MODIFY ("LAST_MODIFIED_DATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" ADD CONSTRAINT "TIMESHEETS_PK" PRIMARY KEY ("TIMESHEET_ID")
  USING INDEX "SCHOOL_KAUR_2211871"."TIMESHEETS_PK"  ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" ADD CONSTRAINT "TIMESHEETS_UK_TEACHERID_STARTDATE" UNIQUE ("TEACHERID", "WEEK_START_DATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table COURSES
--------------------------------------------------------

  ALTER TABLE "SCHOOL_KAUR_2211871"."COURSES" MODIFY ("COURSEID" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."COURSES" MODIFY ("COURSENAME" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."COURSES" MODIFY ("COURSECODE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."COURSES" MODIFY ("COURSEDESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."COURSES" MODIFY ("CREATEDDATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."COURSES" MODIFY ("LASTMODIFIEDDATE" NOT NULL ENABLE);
  ALTER TABLE "SCHOOL_KAUR_2211871"."COURSES" ADD CONSTRAINT "COURSES_PK" PRIMARY KEY ("COURSEID")
  USING INDEX "SCHOOL_KAUR_2211871"."COURSES_PK"  ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."COURSES" ADD CONSTRAINT "COURSES_UK_COURSE_CODE" UNIQUE ("COURSECODE")
  USING INDEX "SCHOOL_KAUR_2211871"."COURSES_INDEX_COURSE_CODE"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPORTS
--------------------------------------------------------

  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" ADD CONSTRAINT "REPORTS_FK_COURSEID" FOREIGN KEY ("COURSEID")
	  REFERENCES "SCHOOL_KAUR_2211871"."COURSES" ("COURSEID") ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" ADD CONSTRAINT "REPORT_FK_STUDENT_ID" FOREIGN KEY ("STUDENTID")
	  REFERENCES "SCHOOL_KAUR_2211871"."STUDENTS" ("STUDENTID") ENABLE;
  ALTER TABLE "SCHOOL_KAUR_2211871"."REPORTS" ADD CONSTRAINT "REPORT_FK_TEACHER_ID" FOREIGN KEY ("TEACHERID")
	  REFERENCES "SCHOOL_KAUR_2211871"."TEACHERS" ("TEACHERID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TIMESHEETS
--------------------------------------------------------

  ALTER TABLE "SCHOOL_KAUR_2211871"."TIMESHEETS" ADD CONSTRAINT "TIMESHEETS_FK_TEACHERID" FOREIGN KEY ("TEACHERID")
	  REFERENCES "SCHOOL_KAUR_2211871"."TEACHERS" ("TEACHERID") ENABLE;
